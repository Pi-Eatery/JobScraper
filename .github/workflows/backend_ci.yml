name: Backend CI

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: pip install poetry
      - name: Generate poetry.lock
        working-directory: ./backend
        run: poetry lock
      - name: Install dependencies
        working-directory: ./backend
        run: poetry install
      - name: Lint with Black
        working-directory: ./backend
        run: poetry run black --check src/
      - name: Lint with Bandit
        working-directory: ./backend
        run: poetry run bandit -r src
      - name: Test with Pytest
        working-directory: ./backend
        run: poetry run pytest
        env:
          PYTHONPATH: ./
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image (for Scout Scan)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: backend-image:latest
          load: true
      - name: Docker Scout Scan
        uses: docker/scout-action@v1
        with:
          command: cves
          image: backend-image:latest
      - name: Run pip-audit
        working-directory: ./backend
        run: |
          pip install pip-audit poetry-plugin-export
          poetry export -f requirements.txt --output requirements.txt --without-hashes --dev
          pip-audit -r requirements.txt